#!/usr/bin/python3

import json
from os import path, popen
from sys import argv, exit

import libaqueduct as lib



def get_target_address(Aqueduct):
	if len(argv) > 1:
		return argv[1]
	return Aqueduct['target']



Aqueduct = {}

try:
	f = open('debian/Aqueduct', 'r')
	Aqueduct = json.load(f)
	f.close()
except ValueError:
	print("Aqueduct file contains invalid json")
	exit(1)
except:
	print("Unable to read Aqueduct file (IE cannot read ./debian/Aqueduct)")
	exit(1)



if 'version' not in Aqueduct:
	print('ERROR: Expected Aqueduct file to have a key called version.')
	exit(1)


if Aqueduct['version'] >= 0 and Aqueduct['version'] < 1:
	print("WARNING: Aqueduct file version " + str(Aqueduct['version']) + " is a TEMPORARY and UNSTABLE specification. Do NOT use it in production.")
	lib.targz('.', '../aqueduct-temp.tar.gz')

	gpg = lib.GPG(Aqueduct['uploader'], '/home/vallery/.gnupg')
	gpg.sign_and_encrypt_file('../aqueduct-temp.tar.gz', Aqueduct['recipient'])

	f = open('../aqueduct-temp.tar.gz.asc')
	lib.upload(
		'../aqueduct-temp.tar.gz.gpg',
		Aqueduct['target']+'/submit',
		{'signature' : f.read()}
	)
	f.close()


else:
	print("ERROR: Unrecognized Aqueduct format version. Perhaps this client is out of date?")
